Index: bionic-8.1.0_p41/system/core/libbacktrace/include/backtrace/Backtrace.h
===================================================================
--- bionic-8.1.0_p41.orig/system/core/libbacktrace/include/backtrace/Backtrace.h
+++ bionic-8.1.0_p41/system/core/libbacktrace/include/backtrace/Backtrace.h
@@ -19,6 +19,7 @@
 
 #include <inttypes.h>
 #include <stdint.h>
+#include <ucontext.h>
 
 #include <string>
 #include <vector>
@@ -68,7 +69,6 @@ struct __darwin_ucontext;
 typedef __darwin_ucontext ucontext_t;
 #else
 struct ucontext;
-typedef ucontext ucontext_t;
 #endif
 
 struct backtrace_stackinfo_t {
Index: bionic-8.1.0_p41/external/libcxx/include/__locale
===================================================================
--- bionic-8.1.0_p41.orig/external/libcxx/include/__locale
+++ bionic-8.1.0_p41/external/libcxx/include/__locale
@@ -36,7 +36,6 @@
 # include <support/newlib/xlocale.h>
 #elif (defined(__GLIBC__) || defined(__APPLE__)      || defined(__FreeBSD__) \
     || defined(__EMSCRIPTEN__) || defined(__IBMCPP__))
-# include <xlocale.h>
 #elif defined(_LIBCPP_HAS_MUSL_LIBC)
 # include <support/musl/xlocale.h>
 #endif // __GLIBC__ || __APPLE__ || __FreeBSD__ || __sun__ || __EMSCRIPTEN__ || __IBMCPP__
Index: bionic-8.1.0_p41/external/compiler-rt/lib/sanitizer_common/Android.bp
===================================================================
--- bionic-8.1.0_p41.orig/external/compiler-rt/lib/sanitizer_common/Android.bp
+++ bionic-8.1.0_p41/external/compiler-rt/lib/sanitizer_common/Android.bp
@@ -23,7 +23,8 @@ cc_library_static {
     host_supported: true,
     clang: true,
 
-    include_dirs: ["external/compiler-rt/lib"],
+    include_dirs: ["external/compiler-rt/lib",
+                  "external/tirpc"],
     cppflags: [
         "-fvisibility=hidden",
         "-fno-exceptions",
Index: bionic-8.1.0_p41/external/compiler-rt/lib/sanitizer_common/sanitizer_linux.h
===================================================================
--- bionic-8.1.0_p41.orig/external/compiler-rt/lib/sanitizer_common/sanitizer_linux.h
+++ bionic-8.1.0_p41/external/compiler-rt/lib/sanitizer_common/sanitizer_linux.h
@@ -30,8 +30,8 @@ struct linux_dirent;
 
 // Syscall wrappers.
 uptr internal_getdents(fd_t fd, struct linux_dirent *dirp, unsigned int count);
-uptr internal_sigaltstack(const struct sigaltstack* ss,
-                          struct sigaltstack* oss);
+uptr internal_sigaltstack(const void* ss,
+                          void* oss);
 uptr internal_sigprocmask(int how, __sanitizer_sigset_t *set,
     __sanitizer_sigset_t *oldset);
 
Index: bionic-8.1.0_p41/external/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc
===================================================================
--- bionic-8.1.0_p41.orig/external/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc
+++ bionic-8.1.0_p41/external/compiler-rt/lib/sanitizer_common/sanitizer_stoptheworld_linux_libcdep.cc
@@ -273,7 +273,7 @@ static int TracerThread(void* argument)
 
   // Alternate stack for signal handling.
   InternalScopedBuffer<char> handler_stack_memory(kHandlerStackSize);
-  struct sigaltstack handler_stack;
+  stack_t handler_stack;
   internal_memset(&handler_stack, 0, sizeof(handler_stack));
   handler_stack.ss_sp = handler_stack_memory.data();
   handler_stack.ss_size = kHandlerStackSize;
Index: bionic-8.1.0_p41/external/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cc
===================================================================
--- bionic-8.1.0_p41.orig/external/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cc
+++ bionic-8.1.0_p41/external/compiler-rt/lib/tsan/rtl/tsan_platform_linux.cc
@@ -282,7 +282,7 @@ void InitializePlatform() {
 int ExtractResolvFDs(void *state, int *fds, int nfd) {
 #if SANITIZER_LINUX && !SANITIZER_ANDROID
   int cnt = 0;
-  __res_state *statp = (__res_state*)state;
+  struct __res_state *statp = (struct __res_state*)state;
   for (int i = 0; i < MAXNS && cnt < nfd; i++) {
     if (statp->_u._ext.nsaddrs[i] && statp->_u._ext.nssocks[i] != -1)
       fds[cnt++] = statp->_u._ext.nssocks[i];
